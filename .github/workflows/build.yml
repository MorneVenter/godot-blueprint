name: build

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

env:
  GODOT_VERSION: 4.4

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4

      - name: Install Godot
        uses: CapsCollective/godot-actions/install-godot@v1.0
        with:
          godot-version: ${{ env.GODOT_VERSION }}
          install-templates: true
        id: install-godot

      - name: Open Godot editor for reimport
        run: ${{ steps.install-godot.outputs.godot-executable }} --editor --headless --quit || true

      - name: Builds
        uses: CapsCollective/godot-actions/build-godot@v1.0
        with:
          godot-executable: ${{ steps.install-godot.outputs.godot-executable }}

  gdlint:
    name: checkstyle gdlint
    runs-on: ubuntu-latest

    env:
      PROBLEMS_THRESHOLD: 0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install 'gdtoolkit==4.*'

      - name: Lint code
        run: |
          gdlint $(find . -name "*.gd" -not -path "./addons/*") > gdlint_output.txt 2>&1 || true
          cat gdlint_output.txt

      - name: Check linter results
        run: |
          cd godot
          PROBLEMS=$(grep -oP 'Failure: \K\d+' gdlint_output.txt || echo "0")
          echo "Problems found: $PROBLEMS"
          echo "Threshold is: $PROBLEMS_THRESHOLD"
          if [ "$PROBLEMS" -gt "$PROBLEMS_THRESHOLD" ]; then
            echo "Quality check failed."
            exit 1
          fi
